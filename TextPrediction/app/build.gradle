/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
}

group = 'com.example'
version = '0.1.0-SNAPSHOT'

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    
    test {
        java {
            srcDirs = ['src/test/java']  
        }
        resources {
            srcDirs = ['src/test/resources']  
        }
    }
}

dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    implementation 'com.google.guava:guava:32.1.1-jre'

    //Apache POI dependency
    implementation 'org.apache.poi:poi-ooxml:5.2.2'

    // Log4j2 API
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'

    // Log4j2 Core
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'

    // Mockito for mocking in tests
    testImplementation 'org.mockito:mockito-core:5.0.0' 

    testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0'

}

tasks.withType(JavaCompile) {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

checkstyle {
    toolVersion = '9.0'
    config = resources.text.fromFile("${rootProject.projectDir}/app/config/checkstyle/checkstyle.xml")
  
    ignoreFailures = true
    showViolations = true
}

application {
    // Define the main class for the application.
    mainClass = 'TextPrediction.App'
    //Define System.in as standard input
    run.standardInput = System.in
}

test {

    useJUnitPlatform()
    maxHeapSize = '1G'
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    dependsOn 'checkstyleMain','checkstyleTest'
    //Including all test classes ending with 'Test'
    include '**/*Test.class'  // Include all classes ending with Test


}

